<?xml version="1.0" encoding="UTF-8"?>
<module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.arhor.by/sql-module ./../sql-module.xsd"
        xmlns="http://www.arhor.by/sql-module"
        name="init-enrollees_has_subjects">

    <dependencies>
        <dependency name="enrollees"/>
        <dependency name="subjects"/>
        <dependency name="enrollees_has_subjects"/>
        <dependency name="init-enrollees"/>
        <dependency name="init-subjects"/>
    </dependencies>

    <queries context="university">
        <util>
            <![CDATA[
            TRUNCATE TABLE enrollees_has_subjects
            ]]>
        </util>

        <insert>
            <![CDATA[
            DECLARE @subjectsRequired INT = 3

            DECLARE @totalFaculties INT = (SELECT COUNT(*) FROM faculties WITH(NOLOCK))
            DECLARE @totalEnrollees INT = (SELECT COUNT(*) FROM enrollees WITH(NOLOCK))

            DECLARE @counter INT = 0

            WHILE (@counter < @totalEnrollees)
            BEGIN
                DECLARE @enrolleeId BIGINT = (
                    SELECT e.id
                    FROM enrollees e WITH(NOLOCK)
                    ORDER BY e.id ASC
                    OFFSET @counter ROWS
                    FETCH NEXT 1 ROWS ONLY
                )

                IF ((SELECT COUNT(*) FROM enrollees_has_subjects es WHERE es.enrollee_id = @enrolleeId) < @subjectsRequired)
                BEGIN
                    PRINT N'Generating subjects for enrollee with ID = ' + CAST(@enrolleeId AS NVARCHAR(30))

                    SET TRANSACTION ISOLATION LEVEL READ COMMITTED
                    BEGIN TRANSACTION
                        DELETE FROM enrollees_has_subjects WHERE enrollee_id = @enrolleeId

                        DECLARE @facultyId BIGINT = (
                            SELECT f.id
                            FROM faculties f
                            ORDER BY f.id ASC
                            OFFSET CAST(FLOOR(@totalFaculties * RAND()) AS INT) ROWS
                            FETCH NEXT 1 ROWS ONLY
                        )

                        DECLARE @subjectsCount INT = 0

                        WHILE (@subjectsCount < @subjectsRequired)
                        BEGIN
                            DECLARE @subjectId BIGINT = (
                                SELECT fhs.subject_id
                                FROM faculties_has_subjects fhs
                                WHERE fhs.faculty_id = @facultyId
                                ORDER BY fhs.faculty_id ASC
                                OFFSET @subjectsCount ROWS
                                FETCH NEXT 1 ROWS ONLY
                            )

                            INSERT INTO enrollees_has_subjects (enrollee_id, subject_id, score)
                            VALUES
                            (
                                @enrolleeId,
                                @subjectId,
                                CEILING(100 * RAND())
                            )


                            SET @subjectsCount = @subjectsCount + 1
                        END

                    COMMIT TRANSACTION
                    PRINT N'Success' + (CHAR(13) + CHAR(10)) -- line-break CR + LF
                END

                SET @counter = @counter + 1
            END
            ]]>
        </insert>
    </queries>

</module>